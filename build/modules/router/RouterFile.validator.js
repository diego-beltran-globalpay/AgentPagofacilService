"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRouterFile = exports.RouterFileSchema = exports.ajv = void 0;
/* tslint:disable */
// generated by typescript-json-validator
const util_1 = require("util");
const Ajv = require("ajv");
exports.ajv = new Ajv({ allErrors: true, coerceTypes: false, format: "fast", nullable: true, unicode: true, uniqueItems: true, useDefaults: true });
exports.ajv.addMetaSchema(require("ajv/lib/refs/json-schema-draft-06.json"));
exports.RouterFileSchema = {
    $schema: "http://json-schema.org/draft-07/schema#",
    additionalProperties: {
        items: {
            defaultProperties: [],
            properties: {
                Fields: {
                    additionalItems: {
                        anyOf: [
                            {
                                anyOf: [
                                    {
                                        defaultProperties: [],
                                        properties: {
                                            FieldToCompare: {
                                                type: "string",
                                            },
                                            Length: {
                                                type: "number",
                                            },
                                            Start: {
                                                type: "number",
                                            },
                                            Value: {},
                                        },
                                        required: ["FieldToCompare", "Value"],
                                        type: "object",
                                    },
                                    {
                                        defaultProperties: [],
                                        properties: {
                                            FieldToCompare: {
                                                type: "string",
                                            },
                                            Length: {
                                                type: "number",
                                            },
                                            LogicalOperator: {
                                                $ref: "#/definitions/ComparisonOperators",
                                            },
                                            Start: {
                                                type: "number",
                                            },
                                            Value: {},
                                        },
                                        required: ["FieldToCompare", "LogicalOperator", "Value"],
                                        type: "object",
                                    },
                                    {
                                        defaultProperties: [],
                                        properties: {
                                            Expression: {
                                                type: "string",
                                            },
                                            FieldToCompare: {
                                                type: "string",
                                            },
                                            Length: {
                                                type: "number",
                                            },
                                            Start: {
                                                type: "number",
                                            },
                                        },
                                        required: ["Expression", "FieldToCompare"],
                                        type: "object",
                                    },
                                ],
                            },
                        ],
                    },
                    items: [
                        {
                            anyOf: [
                                {
                                    defaultProperties: [],
                                    properties: {
                                        FieldToCompare: {
                                            type: "string",
                                        },
                                        Length: {
                                            type: "number",
                                        },
                                        Start: {
                                            type: "number",
                                        },
                                        Value: {},
                                    },
                                    required: ["FieldToCompare", "Value"],
                                    type: "object",
                                },
                                {
                                    defaultProperties: [],
                                    properties: {
                                        FieldToCompare: {
                                            type: "string",
                                        },
                                        Length: {
                                            type: "number",
                                        },
                                        LogicalOperator: {
                                            $ref: "#/definitions/ComparisonOperators",
                                        },
                                        Start: {
                                            type: "number",
                                        },
                                        Value: {},
                                    },
                                    required: ["FieldToCompare", "LogicalOperator", "Value"],
                                    type: "object",
                                },
                                {
                                    defaultProperties: [],
                                    properties: {
                                        Expression: {
                                            type: "string",
                                        },
                                        FieldToCompare: {
                                            type: "string",
                                        },
                                        Length: {
                                            type: "number",
                                        },
                                        Start: {
                                            type: "number",
                                        },
                                    },
                                    required: ["Expression", "FieldToCompare"],
                                    type: "object",
                                },
                            ],
                        },
                    ],
                    minItems: 1,
                    type: "array",
                },
            },
            required: ["Fields"],
            type: "object",
        },
        type: "array",
    },
    defaultProperties: [],
    definitions: {
        ComparisonOperators: {
            enum: ["!=", "<", "<=", "=", ">", ">="],
            type: "string",
        },
    },
    type: "object",
};
exports.isRouterFile = exports.ajv.compile(exports.RouterFileSchema);
function validate(value) {
    if (exports.isRouterFile(value)) {
        return value;
    }
    else {
        throw new Error(exports.ajv.errorsText(exports.isRouterFile.errors.filter((e) => e.keyword !== "if"), { dataVar: "RouterFile" }) +
            "\n\n" +
            util_1.inspect(value));
    }
}
exports.default = validate;
