"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDatabaseConnectionsPropsITF = exports.DatabaseConnectionsPropsITFSchema = exports.ajv = void 0;
/* tslint:disable */
// generated by typescript-json-validator
const util_1 = require("util");
const Ajv = require("ajv");
exports.ajv = new Ajv({ allErrors: true, coerceTypes: false, format: "fast", nullable: true, unicode: true, uniqueItems: true, useDefaults: true });
exports.ajv.addMetaSchema(require("ajv/lib/refs/json-schema-draft-06.json"));
exports.DatabaseConnectionsPropsITFSchema = {
    $schema: "http://json-schema.org/draft-07/schema#",
    defaultProperties: [],
    properties: {
        databaseAcquireTimeouts: {
            items: {
                type: "number",
            },
            type: "array",
        },
        databaseAddresses: {
            items: {
                type: "string",
            },
            type: "array",
        },
        databaseDialects: {
            items: {
                enum: ["mongo", "mssql", "mysql", "pg"],
                type: "string",
            },
            type: "array",
        },
        databaseIds: {
            items: {
                type: "string",
            },
            type: "array",
        },
        databaseMaxPool: {
            items: {
                type: "number",
            },
            type: "array",
        },
        databaseMinPool: {
            items: {
                type: "number",
            },
            type: "array",
        },
        databasePasswords: {
            items: {
                type: "string",
            },
            type: "array",
        },
        databaseSchemas: {
            items: {
                type: "string",
            },
            type: "array",
        },
        databaseUsers: {
            items: {
                type: "string",
            },
            type: "array",
        },
    },
    type: "object",
};
exports.isDatabaseConnectionsPropsITF = exports.ajv.compile(exports.DatabaseConnectionsPropsITFSchema);
function validate(value) {
    if (exports.isDatabaseConnectionsPropsITF(value)) {
        return value;
    }
    else {
        throw new Error(exports.ajv.errorsText(exports.isDatabaseConnectionsPropsITF.errors.filter((e) => e.keyword !== "if"), { dataVar: "DatabaseConnectionsPropsITF" }) +
            "\n\n" +
            util_1.inspect(value));
    }
}
exports.default = validate;
