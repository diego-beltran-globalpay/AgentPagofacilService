"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isBasicsPropsITF = exports.BasicsPropsITFSchema = exports.ajv = void 0;
/* tslint:disable */
// generated by typescript-json-validator
const util_1 = require("util");
const Ajv = require("ajv");
exports.ajv = new Ajv({ allErrors: true, coerceTypes: false, format: "fast", nullable: true, unicode: true, uniqueItems: true, useDefaults: true });
exports.ajv.addMetaSchema(require("ajv/lib/refs/json-schema-draft-06.json"));
exports.BasicsPropsITFSchema = {
    $schema: "http://json-schema.org/draft-07/schema#",
    defaultProperties: [],
    properties: {
        configIniPath: {
            type: "string",
        },
        customPropsDefinitionFilePath: {
            type: "string",
        },
        runOnTestMode: {
            type: "boolean",
        },
        useConfigIni: {
            type: "boolean",
        },
    },
    required: ["configIniPath", "customPropsDefinitionFilePath", "runOnTestMode", "useConfigIni"],
    type: "object",
};
exports.isBasicsPropsITF = exports.ajv.compile(exports.BasicsPropsITFSchema);
function validate(value) {
    if (exports.isBasicsPropsITF(value)) {
        return value;
    }
    else {
        throw new Error(exports.ajv.errorsText(exports.isBasicsPropsITF.errors.filter((e) => e.keyword !== "if"), { dataVar: "BasicsPropsITF" }) +
            "\n\n" +
            util_1.inspect(value));
    }
}
exports.default = validate;
