"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isLoggerPropsITF = exports.LoggerPropsITFSchema = exports.ajv = void 0;
/* tslint:disable */
// generated by typescript-json-validator
const util_1 = require("util");
const Ajv = require("ajv");
exports.ajv = new Ajv({ allErrors: true, coerceTypes: false, format: "fast", nullable: true, unicode: true, uniqueItems: true, useDefaults: true });
exports.ajv.addMetaSchema(require("ajv/lib/refs/json-schema-draft-06.json"));
exports.LoggerPropsITFSchema = {
    $schema: "http://json-schema.org/draft-07/schema#",
    defaultProperties: [],
    properties: {
        logAdditionalTokens: {
            type: "string",
        },
        logBufferSize: {
            type: "number",
        },
        logCategory: {
            type: "string",
        },
        logConfig: {
            type: "string",
        },
        logFileMaxBackups: {
            type: "number",
        },
        logFileMaxSize: {
            type: "number",
        },
        logFilePath: {
            type: "string",
        },
        logHostname: {
            type: "string",
        },
        logLevel: {
            type: "string",
        },
        logModule: {
            type: "string",
        },
        logNodeName: {
            type: "string",
        },
        logPort: {
            type: "number",
        },
    },
    required: [
        "logAdditionalTokens",
        "logBufferSize",
        "logCategory",
        "logConfig",
        "logFileMaxBackups",
        "logFileMaxSize",
        "logFilePath",
        "logHostname",
        "logLevel",
        "logModule",
        "logNodeName",
        "logPort",
    ],
    type: "object",
};
exports.isLoggerPropsITF = exports.ajv.compile(exports.LoggerPropsITFSchema);
function validate(value) {
    if (exports.isLoggerPropsITF(value)) {
        return value;
    }
    else {
        throw new Error(exports.ajv.errorsText(exports.isLoggerPropsITF.errors.filter((e) => e.keyword !== "if"), { dataVar: "LoggerPropsITF" }) +
            "\n\n" +
            util_1.inspect(value));
    }
}
exports.default = validate;
