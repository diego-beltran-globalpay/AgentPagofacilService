"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSaveContextITF = exports.SaveContextITFSchema = exports.ajv = void 0;
/* tslint:disable */
// generated by typescript-json-validator
const util_1 = require("util");
const Ajv = require("ajv");
exports.ajv = new Ajv({ allErrors: true, coerceTypes: false, format: "fast", nullable: true, unicode: true, uniqueItems: true, useDefaults: true });
exports.ajv.addMetaSchema(require("ajv/lib/refs/json-schema-draft-06.json"));
exports.SaveContextITFSchema = {
    $schema: "http://json-schema.org/draft-07/schema#",
    defaultProperties: [],
    definitions: {
        CleanedMsgKey: {
            defaultProperties: [],
            properties: {
                fieldsNameList: {
                    items: {
                        items: {
                            type: "string",
                        },
                        type: "array",
                    },
                    type: "array",
                },
            },
            required: ["fieldsNameList"],
            type: "object",
        },
        Iso8583MsgKey: {
            defaultProperties: [],
            properties: {
                fieldsNameList: {
                    items: {
                        items: {
                            type: "string",
                        },
                        type: "array",
                    },
                    type: "array",
                },
            },
            required: ["fieldsNameList"],
            type: "object",
        },
        TransparentMsgKey: {
            defaultProperties: [],
            properties: {
                fieldsNameList: {
                    items: {
                        items: {
                            type: "string",
                        },
                        type: "array",
                    },
                    type: "array",
                },
            },
            required: ["fieldsNameList"],
            type: "object",
        },
    },
    properties: {
        fieldNameSource: {
            type: "string",
        },
        keyType: {
            enum: ["cleaned", "iso", "transparent"],
            type: "string",
        },
        msgKeyGenerator: {
            anyOf: [
                {
                    $ref: "#/definitions/CleanedMsgKey",
                },
                {
                    $ref: "#/definitions/TransparentMsgKey",
                },
                {
                    $ref: "#/definitions/Iso8583MsgKey",
                },
            ],
        },
        sourceKey_1: {
            type: "string",
        },
        sourceKey_10: {
            type: "string",
        },
        sourceKey_2: {
            type: "string",
        },
        sourceKey_3: {
            type: "string",
        },
        sourceKey_4: {
            type: "string",
        },
        sourceKey_5: {
            type: "string",
        },
        sourceKey_6: {
            type: "string",
        },
        sourceKey_7: {
            type: "string",
        },
        sourceKey_8: {
            type: "string",
        },
        sourceKey_9: {
            type: "string",
        },
    },
    type: "object",
};
exports.isSaveContextITF = exports.ajv.compile(exports.SaveContextITFSchema);
function validate(value) {
    if (exports.isSaveContextITF(value)) {
        return value;
    }
    else {
        throw new Error(exports.ajv.errorsText(exports.isSaveContextITF.errors.filter((e) => e.keyword !== "if"), { dataVar: "SaveContextITF" }) +
            "\n\n" +
            util_1.inspect(value));
    }
}
exports.default = validate;
