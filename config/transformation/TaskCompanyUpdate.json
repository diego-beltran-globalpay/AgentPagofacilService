{
  "Version": "1.005.000",
  "Transformation": {
    "CompanyUpdate": {
      "Task": {
        "Match": [],
        "Rule": [
          {

            "@SetLog([PagoFacil] Iniciando actualizacion de Company,info)" : "",
            "+tmp.CurrentTimestamp"                           : "@GetCurrentTimestamp()",
            "+tmp.CurrentDate"                                : "@GetMysqlDate(1)",
            "+tmp.CurrentDatetime"                            : "@GetMysqlDate(1)",

            "@SetLog([PagoFacil] Validando fecha de ultima modificacion,info)"  : "",
            "@GetRecord(connPF,user_extra,%Ttmp.user_extra,idUsuario,%Ttmp.user.id)": "",
            "+tmp.isValidUpdate" : "@isValidUpdate(%Ttmp.user_extra,%Ttmp.ConsultaBDNRes)",

            "+Cond.isValidUpdate": {
              "Match": [
                {"%Ttmp.isValidUpdate": "^1$"},
                {"%Ttmp.isValidUpdate": "^0$"}
              ],
              "Rule": [
                {
                  "@SetLog([PagoFacil] Datos Validados OK - Se procede con update,info)"        : ""
                },
                {
                  "@SetLog([PagoFacil] Datos Invalidos - Terminando proceso,info)"        : "",
                  "@GoToError(0)"                             : ""
                }
              ]
            },

            "@SetLog([PagoFacil] Escribiendo tablas PagoFacil,%Ttmp.user,username,info)"  : "",

            "@CallTo(PFUserDatosFacturacionUpdate,0)": "",
            "@CallTo(PFExtSBUUpdate,0)": "",
            "@CallTo(PFUserBankAccountsUpdate,0)": "",
            "@CallTo(PFServiceUpdate,0)": "",
            "@CallTo(PFUserMerchantInstallmentsUpdate,0)": "",
            "@CallTo(PFDynamoDataUpdate,0)": "",
            "@CallTo(PFUserExtraUpdate,0)": "",

            "@SetLog([PagoFacil] Proceso de actualizacion terminado,info)"  : "",

            "-tmp.ConsultaBDNRes"                         :""
          }
        ]
      },
      "Error": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Error en creacion de Company,info)": "",
            "+ResultCode":"500",
            "+ResultMessage":"Error",
            "+MessageType":"Answer"
          }
        ]
      }
    },
    "PFUserExtraUpdate": {
      "Task": {
        "Match": [],
        "Rule": [
          {

            "@SetLog([PagoFacil] Iniciando actualizacion de user_extra,info)": "",

            "+tmp.updUserExtra.nombre"                                : "%Ttmp.ConsultaBDNRes.nombre",
            "+tmp.updUserExtra.apellido"                              : "%Ttmp.ConsultaBDNRes.paterno",

            "+Cond.hasName": {
              "Match": [
                {"%Ttmp.updUserExtra.nombre": "^(null|undefined|)$"}
              ],
              "Rule": [
                {
                  "+tmp.updUserExtra.nombre"                                : "%Ttmp.ConsultaBDNRes.rlNombre",
                  "+tmp.updUserExtra.apellido"                              : "%Ttmp.ConsultaBDNRes.rlPaterno"
                }
              ]
            },

            "+Cond.isRecurringPayment": {
              "Match": [
                {"%Ttmp.ConsultaBDNRes.tpProdServ": "^17$"},
                {"%Ttmp.ConsultaBDNRes.tpProdServ": "^(?!17$).*$"}
              ],
              "Rule": [
                {
                  "@SetLog([PagoFacil] Se agrega campo tiene_cargo_recurrente,info)"        : "",
                  "+tmp.updUserExtra.tiene_cargo_recurrente"           : true
                },
                {
                  "+tmp.updUserExtra.tiene_cargo_recurrente"           : false,
                  "@SetLog([PagoFacil] No es Cargo recurrente,info)"        : ""
                }
              ]
            },

            "+tmp.updUserExtra.ciudad"                                : "%Ttmp.ConsultaBDNRes.fiscalCiudad",
            "+tmp.updUserExtra.pais"                                  : "%Ttmp.ConsultaBDNRes.nacionalidadPm",
            "+tmp.updUserExtra.rut"                                   : "%Ttmp.ConsultaBDNRes.rut",
            "+tmp.updUserExtra.telefono"                              : "%Ttmp.ConsultaBDNRes.fiscalTelefono",
            "+tmp.updUserExtra.updated_at"                            : "%Ttmp.CurrentDate",

            "+tmp.updUserExtra.id"                                    : "@UpdateRecord(connPF,user_extra,%Ttmp.updUserExtra,idUsuario,%Ttmp.user.id)"

          }
        ]
      },
      "Error": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Error en actualizacion de PFUserExtraCreation,info)": "",
            "+ResultCode":"500",
            "+ResultMessage":"Error",
            "+MessageType":"Answer"
          }
        ]
      }
    },
    "PFUserDatosFacturacionUpdate": {
      "Task": {
        "Match": [],
        "Rule": [{
          "@SetLog([PagoFacil] Iniciando actualizacion de user_datos_facturacion,info)": "",

          "+tmp.updUserDF.ciudad"                           : "%Ttmp.ConsultaBDNRes.fiscalCiudad",
          "+tmp.updUserDF.comuna"                           : "%Ttmp.ConsultaBDNRes.fiscalComuna",
          "+tmp.updUserDF.direccion"                        : "%Ttmp.ConsultaBDNRes.fiscalCalle",
          "+tmp.updUserDF.email_dte"                        : "%Ttmp.ConsultaBDNRes.fiscalEmail",
          "+tmp.updUserDF.giro"                             : "%Ttmp.ConsultaBDNRes.giroSii",
          "+tmp.updUserDF.nombreRepresentante"              : "@Concat(%Ttmp.ConsultaBDNRes.rlNombre, ,%Ttmp.ConsultaBDNRes.rlPaterno, ,%Ttmp.ConsultaBDNRes.rlMaterno)",
          "+tmp.updUserDF.razonSocial"                      : "%Ttmp.ConsultaBDNRes.razonSocial",
          "+tmp.updUserDF.rut"                              : "%Ttmp.ConsultaBDNRes.rut",
          "+tmp.updUserDF.rutRepresentante"                 : "%Ttmp.ConsultaBDNRes.rlRut",
          "+tmp.updUserDF.updated_at"                       : "%Ttmp.CurrentDate",

          "+tmp.updUserDF.id"                               : "@UpdateRecord(connPF,user_datos_facturacion,%Ttmp.updUserDF,idUsuario,%Ttmp.user.id)"
        }]
      },
      "Error": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Error en actualizacion de PFUserDatosFacturacionCreation,info)": "",
            "+ResultCode":"500",
            "+ResultMessage":"Error",
            "+MessageType":"Answer"
          }
        ]
      }
    },
    "PFExtSBUUpdate": {
      "Task": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Iniciando actualizacion de ext_services_bridge_usuarios,info)": "",

            "+tmp.updExtSBU.idExtService"                     : "16",
            "+tmp.updExtSBU.key1"                             : "%Ttmp.ConsultaBDNRes.afiliacion",
            "+tmp.updExtSBU.notes"                            : "BCI PAGOS",
            "+tmp.updExtSBU.updated_at"                       : "%Ttmp.CurrentDate",

            "+tmp.updExtSBU.id"                               : "@UpdateRecord(connPF,ext_services_bridge_usuarios,%Ttmp.updExtSBU,idUser,%Ttmp.user.id)"
          }
        ]
      },
      "Error": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Error en actualizacion de PFext_services_bridge_usuarios,info)": "",
            "+ResultCode":"500",
            "+ResultMessage":"Error",
            "+MessageType":"Answer"
          }
        ]
      }
    },
    "PFUserBankAccountsUpdate": {
      "Task": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Iniciando actualizacion de user_bank_accounts,info)": "",

            "@GetRecord(connPF,global_instituciones_financieras,%Ttmp.Institucion,codigoSBIF,%Ttmp.ConsultaBDNRes.claveBanco)": "",

            "+tmp.updUserBnkAc.idInstitucion"                    : "%Ttmp.Institucion.id",
            "+tmp.updUserBnkAc.rutDestinatario"                  : "%Ttmp.ConsultaBDNRes.rutTitularCuenta",

            "+Cond.hasRutDestinatario": {
              "Match": [
                {"%Ttmp.ConsultaBDNRes.rutTitularCuenta": "^(null|undefined|)$"}
              ],
              "Rule": [
                {
                  "+tmp.updUserBnkAc.rutDestinatario"            : "%Ttmp.ConsultaBDNRes.rut"
                }
              ]
            },

            "+tmp.updUserBnkAc.nombreDestinatario"               : "@Concat(%Ttmp.ConsultaBDNRes.rlNombre, ,%Ttmp.ConsultaBDNRes.rlPaterno, ,%Ttmp.ConsultaBDNRes.rlMaterno)",
            "+tmp.updUserBnkAc.numeroCuenta"                     : "%Ttmp.ConsultaBDNRes.ctaNacAbono",
            "+tmp.updUserBnkAc.emailDestinatario"                : "%Ttmp.ConsultaBDNRes.emailContacto",

            "+Cond.hasEmailContacto": {
              "Match": [
                {"%Ttmp.ConsultaBDNRes.emailContacto": "^(null|undefined|)$"}
              ],
              "Rule": [
                {
                  "+tmp.updUserBnkAc.emailDestinatario"          : "%Ttmp.ConsultaBDNRes.comercioEmail"
                }
              ]
            },

            "+tmp.updUserBnkAc.updated_at"                       : "%Ttmp.CurrentDate",

            "+tmp.updUserBnkAc.id"                               : "@UpdateRecord(connPF,user_bank_accounts,%Ttmp.updUserBnkAc,idUsuario,%Ttmp.user.id)"
          }
        ]
      },
      "Error": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Error en actualizacion de PF user_bank_accounts,info)": "",
            "+ResultCode":"500",
            "+ResultMessage":"Error",
            "+MessageType":"Answer"
          }
        ]
      }
    },
    "PFServiceUpdate": {
      "Task": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Iniciando actualizacion de servicios_tbk,info)": "",

            "+tmp.updService.owner"                            : "%Ttmp.newUser.id",
            "+tmp.updService.tipo"                             : "SIN ECOMMERCE",
            "+tmp.updService.nombreComercio"                   : "%Ttmp.ConsultaBDNRes.nombreFantasia",
            "+tmp.updService.url_servicio"                     : "%Ttmp.ConsultaBDNRes.urlSitio",
            "+Cond.TieneUrlServicio": {
              "Match": [{ "%Ttmp.ConsultaBDNRes.urlSitio": "^(null|undefined|)$" }],
              "Rule": [{"+tmp.updService.url_servicio": "https://www.pagofacil.cl/"}]
            },
            "+tmp.updService.idPlan"                           : "24",
            "+tmp.updService.callbackUrl"                      : "",
            "+tmp.updService.returnUrl"                        : "",
            "+tmp.updService.habilitado"                       : "1",
            "+tmp.updService.valido_hasta"                     : "%Ttmp.CurrentDate",
            "+tmp.updService.updated_at"                       : "%Ttmp.CurrentDatetime",
            "+tmp.updService.id"                               : "@UpdateRecord(connPF,servicios_tbk,%Ttmp.updService,owner,%Ttmp.user.id)"
          }
        ]
      },
      "Error": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Error en actualizacion de PFCreateService,info)": "",
            "+ResultCode":"500",
            "+ResultMessage":"Error",
            "+MessageType":"Answer"
          }
        ]
      }
    },
    "PFUserMerchantInstallmentsUpdate": {
      "Task": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Iniciando actualizacion de user_merchant_installments,info)": "",

            "+tmp.updMI.affiliation"                      : "%Ttmp.ConsultaBDNRes.afiliacion",
            "+tmp.updMI.start_quote"                      : 2,
            "+tmp.updMI.end_quote"                        : "%Ttmp.ConsultaBDNRes.plazosCuotasComercio",
            "+tmp.updMI.updated_at"                       : "%Ttmp.CurrentDatetime",
            "+tmp.updMI.id"                               : "@UpdateRecord(connPF,user_merchant_installments,%Ttmp.updMI,affiliation,%Ttmp.ConsultaBDNRes.afiliacion)"
          }
        ]
      },
      "Error": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Error en actualizacion de PFUserMerchantInstallments,info)": "",
            "+ResultCode":"500",
            "+ResultMessage":"Error",
            "+MessageType":"Answer"
          }
        ]
      }
    },
    "PFDynamoDataUpdate": {
      "Task": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Iniciando actualizacion de evo_gw_merchant_id,info)": "",

            "@GetRecord(connPF,servicios_tbk,%Ttmp.updService,owner,%Ttmp.user.id)": "",
            "+tmp.dynamoData" : "@UpdateEVOGW(%Ttmp.ConsultaBDNRes.afiliacion,%Ttmp.ConsultaBDNRes.idGiro,%Ttmp.ConsultaBDNRes.urlSitio,%Ttmp.ConsultaBDNRes.nombreFantasia,%Ttmp.updService.id)"
          }
        ]
      },
      "Error": {
        "Match": [],
        "Rule": [
          {
            "@SetLog([PagoFacil] Error en actualizacion de PFDynamoData,info)": "",
            "+ResultCode":"500",
            "+ResultMessage":"Error",
            "+MessageType":"Answer"
          }
        ]
      }
    }
  }
}
